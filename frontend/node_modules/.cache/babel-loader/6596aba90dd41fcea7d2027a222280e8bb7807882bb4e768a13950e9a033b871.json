{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      user: {\n        id: '',\n        // ID user yang akan ditampilkan\n        nama: '',\n        email: '',\n        roles: '',\n        no_telp: ''\n      },\n      notification: {\n        message: '',\n        type: '' // 'success' atau 'error'\n      },\n      errors: {\n        nama: '',\n        email: '',\n        no_telp: ''\n      }\n    };\n  },\n  created() {\n    const userId = this.$route.params.id; // Mendapatkan ID user dari URL\n    if (userId) {\n      this.getUserData(userId); // Mengambil data user berdasarkan ID\n    } else {\n      console.error('User ID tidak ditemukan');\n    }\n  },\n  methods: {\n    // Fungsi untuk mengambil data user dari server\n    async getUserData(userId) {\n      try {\n        const response = await axios.get(`http://127.0.0.1:5000/edit-user/${userId}`);\n        if (response.data) {\n          this.user = response.data; // Mengisi form dengan data user yang diambil\n        } else {\n          console.error('Pengguna tidak ditemukan!');\n          this.notification.message = 'Pengguna tidak ditemukan';\n          this.notification.type = 'error';\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n        this.notification.message = 'Gagal mengambil data pengguna';\n        this.notification.type = 'error';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user","id","nama","email","roles","no_telp","notification","message","type","errors","created","userId","$route","params","getUserData","console","error","methods","response","get"],"sources":["D:\\SEMESTER 5\\Proyek\\Web_Kost\\frontend\\src\\views\\EditUser.vue"],"sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"col-md-8\">\r\n      <div class=\"card card-user\">\r\n        <div class=\"card-header\">\r\n          <h5 class=\"card-title\">Informasi User</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <!-- Notifikasi -->\r\n          <div v-if=\"notification.message\" :class=\"['notification', notification.type]\">\r\n            {{ notification.message }}\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"form-group\">\r\n                <label>Nama</label>\r\n                <input \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"Nama\" \r\n                  v-model=\"user.nama\"\r\n                  :class=\"{'is-invalid': errors.nama}\"\r\n                  readonly\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"form-group\">\r\n                <label>Email</label>\r\n                <input \r\n                  type=\"email\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"Email\" \r\n                  v-model=\"user.email\"\r\n                  :class=\"{'is-invalid': errors.email}\"\r\n                  readonly\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"form-group\">\r\n                <label>Roles</label>\r\n                <input \r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  v-model=\"user.roles\"\r\n                  readonly\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"form-group\">\r\n                <label>Phone</label>\r\n                <input \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"Phone\" \r\n                  v-model=\"user.no_telp\"\r\n                  :class=\"{'is-invalid': errors.no_telp}\"\r\n                  readonly\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- No submit button as it's only displaying information -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {\r\n        id: '', // ID user yang akan ditampilkan\r\n        nama: '',\r\n        email: '',\r\n        roles: '',\r\n        no_telp: ''\r\n      },\r\n      notification: {\r\n        message: '',\r\n        type: '' // 'success' atau 'error'\r\n      },\r\n      errors: {\r\n        nama: '',\r\n        email: '',\r\n        no_telp: ''\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    const userId = this.$route.params.id; // Mendapatkan ID user dari URL\r\n    if (userId) {\r\n      this.getUserData(userId); // Mengambil data user berdasarkan ID\r\n    } else {\r\n      console.error('User ID tidak ditemukan');\r\n    }\r\n  },\r\n  methods: {\r\n    // Fungsi untuk mengambil data user dari server\r\n    async getUserData(userId) {\r\n      try {\r\n        const response = await axios.get(`http://127.0.0.1:5000/edit-user/${userId}`);\r\n        if (response.data) {\r\n          this.user = response.data; // Mengisi form dengan data user yang diambil\r\n        } else {\r\n          console.error('Pengguna tidak ditemukan!');\r\n          this.notification.message = 'Pengguna tidak ditemukan';\r\n          this.notification.type = 'error';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n        this.notification.message = 'Gagal mengambil data pengguna';\r\n        this.notification.type = 'error';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AAgFA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,EAAE,EAAE,EAAE;QAAE;QACRC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACX,CAAC;MACDC,YAAY,EAAE;QACZC,OAAO,EAAE,EAAE;QACXC,IAAI,EAAE,EAAC,CAAE;MACX,CAAC;MACDC,MAAM,EAAE;QACNP,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTE,OAAO,EAAE;MACX;IACF,CAAC;EACH,CAAC;EACDK,OAAOA,CAAA,EAAG;IACR,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACZ,EAAE,EAAE;IACtC,IAAIU,MAAM,EAAE;MACV,IAAI,CAACG,WAAW,CAACH,MAAM,CAAC,EAAE;IAC5B,OAAO;MACLI,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC;IAC1C;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMH,WAAWA,CAACH,MAAM,EAAE;MACxB,IAAI;QACF,MAAMO,QAAO,GAAI,MAAMpB,KAAK,CAACqB,GAAG,CAAC,mCAAmCR,MAAM,EAAE,CAAC;QAC7E,IAAIO,QAAQ,CAACnB,IAAI,EAAE;UACjB,IAAI,CAACC,IAAG,GAAIkB,QAAQ,CAACnB,IAAI,EAAE;QAC7B,OAAO;UACLgB,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;UAC1C,IAAI,CAACV,YAAY,CAACC,OAAM,GAAI,0BAA0B;UACtD,IAAI,CAACD,YAAY,CAACE,IAAG,GAAI,OAAO;QAClC;MACF,EAAE,OAAOQ,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,IAAI,CAACV,YAAY,CAACC,OAAM,GAAI,+BAA+B;QAC3D,IAAI,CAACD,YAAY,CAACE,IAAG,GAAI,OAAO;MAClC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}