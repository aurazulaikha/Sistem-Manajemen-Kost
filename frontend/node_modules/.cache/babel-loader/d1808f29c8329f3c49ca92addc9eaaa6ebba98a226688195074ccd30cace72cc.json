{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      penyewa: {\n        id: '',\n        // ID user yang akan diedit\n        nama: '',\n        email: '',\n        no_telp: ''\n      },\n      notification: {\n        message: '',\n        type: '' // 'alert-success' untuk sukses, 'alert-danger' untuk error\n      },\n      errors: {\n        nama: '',\n        email: '',\n        no_telp: ''\n      }\n    };\n  },\n  created() {\n    const penyewaId = this.$route.params.id; // Mendapatkan ID user dari URL\n    if (penyewaId) {\n      this.getPenyewaData(penyewaId); // Mengambil data user berdasarkan ID\n    } else {\n      this.$router.push('/list-penyewa'); // Redirect jika ID tidak ada\n    }\n  },\n  methods: {\n    // Fungsi untuk mengambil data user dari server\n    async getPenyewaData(penyewaId) {\n      try {\n        const response = await axios.get(`http://127.0.0.1:5000/edit-penyewa/${penyewaId}`);\n        if (response.data && response.data.id) {\n          this.penyewa = response.data; // Mengisi form dengan data user yang diambil\n        } else {\n          this.showNotification('Penyewa tidak ditemukan', 'alert-danger');\n        }\n      } catch (error) {\n        this.showNotification('Gagal mengambil data penyewa', 'alert-danger');\n        console.error(error);\n      }\n    },\n    // Fungsi untuk mengirim data form ke server\n    async submitForm() {\n      // Reset error\n      this.errors = {};\n\n      // Validasi form\n      if (!this.penyewa.nama) {\n        this.errors.nama = 'Nama tidak boleh kosong';\n      }\n      if (!this.penyewa.email) {\n        this.errors.email = 'Email tidak boleh kosong';\n      } else if (!this.isValidEmail(this.penyewa.email)) {\n        this.errors.email = 'Format email tidak valid';\n      }\n      if (!this.penyewa.no_telp) {\n        this.errors.no_telp = 'Nomor telepon tidak boleh kosong';\n      } else if (!this.isValidPhone(this.penyewa.no_telp)) {\n        this.errors.no_telp = 'Nomor telepon harus berisi angka';\n      }\n\n      // Jika ada error, tidak akan mengirimkan form\n      if (Object.keys(this.errors).length > 0) {\n        return;\n      }\n\n      // Mengirim data ke server untuk memperbarui data user\n      try {\n        await axios.put(`http://127.0.0.1:5000/edit-penyewa/${this.penyewa.id}`, this.penyewa);\n\n        // Menampilkan notifikasi sukses\n        this.showNotification('Data Penyewa berhasil diperbarui!', 'alert-success');\n\n        // Redirect ke halaman daftar user setelah sukses\n        setTimeout(() => {\n          this.$router.push('/list-penyewa');\n        }, 2000);\n      } catch (error) {\n        // Menampilkan notifikasi error\n        this.showNotification('Data gagal diperbarui!', 'alert-danger');\n        console.error(error);\n      }\n    },\n    // Fungsi untuk memeriksa format email yang valid\n    isValidEmail(email) {\n      const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n      return regex.test(email);\n    },\n    // Fungsi untuk memeriksa format nomor telepon yang valid\n    isValidPhone(phone) {\n      return /^[0-9]+$/.test(phone); // Memastikan hanya angka\n    },\n    // Fungsi untuk menampilkan notifikasi\n    showNotification(message, type) {\n      this.notification.message = message;\n      this.notification.type = type;\n      setTimeout(() => {\n        this.notification.message = '';\n      }, 3000);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","penyewa","id","nama","email","no_telp","notification","message","type","errors","created","penyewaId","$route","params","getPenyewaData","$router","push","methods","response","get","showNotification","error","console","submitForm","isValidEmail","isValidPhone","Object","keys","length","put","setTimeout","regex","test","phone"],"sources":["D:\\SEMESTER 5\\Proyek\\Web_Kost\\frontend\\src\\views\\EditPenyewa.vue"],"sourcesContent":["<template>\r\n    <div class=\"content\">\r\n      <div class=\"col-md-8\">\r\n        <div class=\"card card-user\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Edit Penyewa</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <!-- Notifikasi -->\r\n            <div v-if=\"notification.message\" :class=\"['notification', notification.type]\">\r\n              {{ notification.message }}\r\n            </div>\r\n  \r\n            <form @submit.prevent=\"submitForm\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                    <label>Nama</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Nama\"\r\n                      v-model=\"penyewa.nama\"\r\n                      :class=\"{'is-invalid': errors.nama}\"\r\n                      required\r\n                    />\r\n                    <div v-if=\"errors.nama\" class=\"invalid-feedback\">{{ errors.nama }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      v-model=\"penyewa.email\"\r\n                      :class=\"{'is-invalid': errors.email}\"\r\n                      required\r\n                    />\r\n                    <div v-if=\"errors.email\" class=\"invalid-feedback\">{{ errors.email }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                    <label>Phone</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Contoh: 081234567890\"\r\n                      v-model=\"penyewa.no_telp\"\r\n                      :class=\"{'is-invalid': errors.no_telp}\"\r\n                      required\r\n                    />\r\n                    <div v-if=\"errors.no_telp\" class=\"invalid-feedback\">{{ errors.no_telp }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"update ml-auto mr-auto\">\r\n                  <button type=\"submit\" class=\"btn btn-update-profile btn-round\">Edit Penyewa</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        penyewa: {\r\n          id: '', // ID user yang akan diedit\r\n          nama: '',\r\n          email: '',\r\n          no_telp: ''\r\n        },\r\n        notification: {\r\n          message: '',\r\n          type: '' // 'alert-success' untuk sukses, 'alert-danger' untuk error\r\n        },\r\n        errors: {\r\n          nama: '',\r\n          email: '',\r\n          no_telp: ''\r\n        }\r\n      };\r\n    },\r\n    created() {\r\n      const penyewaId = this.$route.params.id; // Mendapatkan ID user dari URL\r\n      if (penyewaId) {\r\n        this.getPenyewaData(penyewaId); // Mengambil data user berdasarkan ID\r\n      } else {\r\n        this.$router.push('/list-penyewa'); // Redirect jika ID tidak ada\r\n      }\r\n    },\r\n    methods: {\r\n      // Fungsi untuk mengambil data user dari server\r\n      async getPenyewaData(penyewaId) {\r\n        try {\r\n          const response = await axios.get(`http://127.0.0.1:5000/edit-penyewa/${penyewaId}`);\r\n          if (response.data && response.data.id) {\r\n            this.penyewa = response.data; // Mengisi form dengan data user yang diambil\r\n          } else {\r\n            this.showNotification('Penyewa tidak ditemukan', 'alert-danger');\r\n          }\r\n        } catch (error) {\r\n          this.showNotification('Gagal mengambil data penyewa', 'alert-danger');\r\n          console.error(error);\r\n        }\r\n      },\r\n  \r\n      // Fungsi untuk mengirim data form ke server\r\n      async submitForm() {\r\n        // Reset error\r\n        this.errors = {};\r\n  \r\n        // Validasi form\r\n        if (!this.penyewa.nama) {\r\n          this.errors.nama = 'Nama tidak boleh kosong';\r\n        }\r\n        if (!this.penyewa.email) {\r\n          this.errors.email = 'Email tidak boleh kosong';\r\n        } else if (!this.isValidEmail(this.penyewa.email)) {\r\n          this.errors.email = 'Format email tidak valid';\r\n        }\r\n        if (!this.penyewa.no_telp) {\r\n          this.errors.no_telp = 'Nomor telepon tidak boleh kosong';\r\n        } else if (!this.isValidPhone(this.penyewa.no_telp)) {\r\n          this.errors.no_telp = 'Nomor telepon harus berisi angka';\r\n        }\r\n  \r\n        // Jika ada error, tidak akan mengirimkan form\r\n        if (Object.keys(this.errors).length > 0) {\r\n          return;\r\n        }\r\n  \r\n        // Mengirim data ke server untuk memperbarui data user\r\n        try {\r\n          await axios.put(`http://127.0.0.1:5000/edit-penyewa/${this.penyewa.id}`, this.penyewa);\r\n  \r\n          // Menampilkan notifikasi sukses\r\n          this.showNotification('Data Penyewa berhasil diperbarui!', 'alert-success');\r\n  \r\n          // Redirect ke halaman daftar user setelah sukses\r\n          setTimeout(() => {\r\n            this.$router.push('/list-penyewa');\r\n          }, 2000);\r\n        } catch (error) {\r\n          // Menampilkan notifikasi error\r\n          this.showNotification('Data gagal diperbarui!', 'alert-danger');\r\n          console.error(error);\r\n        }\r\n      },\r\n  \r\n      // Fungsi untuk memeriksa format email yang valid\r\n      isValidEmail(email) {\r\n        const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n        return regex.test(email);\r\n      },\r\n  \r\n      // Fungsi untuk memeriksa format nomor telepon yang valid\r\n      isValidPhone(phone) {\r\n        return /^[0-9]+$/.test(phone); // Memastikan hanya angka\r\n      },\r\n  \r\n      // Fungsi untuk menampilkan notifikasi\r\n      showNotification(message, type) {\r\n        this.notification.message = message;\r\n        this.notification.type = type;\r\n  \r\n        setTimeout(() => {\r\n          this.notification.message = '';\r\n        }, 3000);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .notification {\r\n    padding: 10px;\r\n    margin-bottom: 15px;\r\n    border-radius: 5px;\r\n  }\r\n  .alert-success {\r\n    color: #155724;\r\n    background-color: #d4edda;\r\n    border-color: #c3e6cb;\r\n  }\r\n  .alert-danger {\r\n    color: #721c24;\r\n    background-color: #f8d7da;\r\n    border-color: #f5c6cb;\r\n  }\r\n  .is-invalid {\r\n    border-color: #e3342f;\r\n  }\r\n  .invalid-feedback {\r\n    color: #e3342f;\r\n    font-size: 0.875em;\r\n  }\r\n  .content {\r\n    margin: 20px auto;\r\n    max-width: 600px;\r\n  }\r\n  .btn-update-profile {\r\n    background-color: #5cb85c;\r\n    color: white;\r\n    border: none;\r\n  }\r\n  .btn-update-profile:hover {\r\n    background-color: #4cae4c;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}