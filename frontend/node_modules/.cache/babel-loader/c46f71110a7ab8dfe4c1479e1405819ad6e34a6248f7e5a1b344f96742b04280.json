{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      user: {\n        id: '',\n        nama: '',\n        email: '',\n        no_telp: ''\n      },\n      notification: {\n        message: '',\n        type: ''\n      },\n      errors: {\n        nama: '',\n        email: '',\n        no_telp: ''\n      }\n    };\n  },\n  created() {\n    const userId = this.$route.params.id;\n    if (userId) {\n      this.getUserData(userId);\n    } else {\n      console.error('User ID tidak ditemukan');\n    }\n  },\n  methods: {\n    // Fungsi untuk mengambil data user dari server\n    async getUserData(userId) {\n      try {\n        const response = await axios.get(`http://127.0.0.1:5000/edit-user/${userId}`);\n        if (response.data) {\n          this.user = response.data;\n        } else {\n          this.notification.message = 'Pengguna tidak ditemukan';\n          this.notification.type = 'alert-danger';\n        }\n      } catch (error) {\n        this.notification.message = 'Gagal mengambil data pengguna';\n        this.notification.type = 'alert-danger';\n      }\n    },\n    async submitForm() {\n      this.errors = {};\n\n      // Validasi form\n      if (!this.user.nama) {\n        this.errors.nama = 'Nama tidak boleh kosong';\n      }\n      if (!this.user.email) {\n        this.errors.email = 'Email tidak boleh kosong';\n      } else if (!this.isValidEmail(this.user.email)) {\n        this.errors.email = 'Format email tidak valid';\n      }\n      if (!this.user.no_telp) {\n        this.errors.no_telp = 'Nomor telepon tidak boleh kosong';\n      }\n      if (Object.keys(this.errors).length > 0) {\n        return;\n      }\n      try {\n        await axios.put(`http://127.0.0.1:5000/edit-user/${this.user.id}`, this.user);\n        this.notification.message = 'Data User berhasil diperbarui!';\n        this.notification.type = 'alert-success';\n        setTimeout(() => {\n          this.$router.push('/list-user');\n        }, 2000);\n      } catch (error) {\n        this.notification.message = 'Data gagal diperbarui!';\n        this.notification.type = 'alert-danger';\n        console.error(error);\n      }\n    },\n    isValidEmail(email) {\n      const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n      return regex.test(email);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user","id","nama","email","no_telp","notification","message","type","errors","created","userId","$route","params","getUserData","console","error","methods","response","get","submitForm","isValidEmail","Object","keys","length","put","setTimeout","$router","push","regex","test"],"sources":["D:\\SEMESTER 5\\Proyek\\Kost\\frontend\\src\\views\\EditUser.vue"],"sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"col-md-8\">\r\n      <div class=\"card card-user\">\r\n        <div class=\"card-header\">\r\n          <h5 class=\"card-title\">Edit User</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div v-if=\"notification.message\" :class=\"['notification', notification.type]\">\r\n            {{ notification.message }}\r\n          </div>\r\n\r\n          <form @submit.prevent=\"submitForm\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <label>Nama</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    class=\"form-control\" \r\n                    placeholder=\"Nama\" \r\n                    v-model=\"user.nama\"\r\n                    :class=\"{'is-invalid': errors.nama}\"\r\n                    required\r\n                  />\r\n                  <div v-if=\"errors.nama\" class=\"invalid-feedback\">{{ errors.nama }}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <label>Email</label>\r\n                  <input \r\n                    type=\"email\" \r\n                    class=\"form-control\" \r\n                    placeholder=\"Email\" \r\n                    v-model=\"user.email\"\r\n                    :class=\"{'is-invalid': errors.email}\"\r\n                    required\r\n                  />\r\n                  <div v-if=\"errors.email\" class=\"invalid-feedback\">{{ errors.email }}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <label>Phone</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    class=\"form-control\" \r\n                    placeholder=\"Phone\" \r\n                    v-model=\"user.no_telp\"\r\n                    :class=\"{'is-invalid': errors.no_telp}\"\r\n                    required\r\n                  />\r\n                  <div v-if=\"errors.no_telp\" class=\"invalid-feedback\">{{ errors.no_telp }}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"update ml-auto mr-auto\">\r\n                <button type=\"submit\" class=\"btn btn-update-profile btn-round\">Edit User</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {\r\n        id: '', \r\n        nama: '',\r\n        email: '',\r\n        no_telp: ''\r\n      },\r\n      notification: {\r\n        message: '',\r\n        type: '' \r\n      },\r\n      errors: {\r\n        nama: '',\r\n        email: '',\r\n        no_telp: ''\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    const userId = this.$route.params.id; \r\n    if (userId) {\r\n      this.getUserData(userId);\r\n    } else {\r\n      console.error('User ID tidak ditemukan');\r\n    }\r\n  },\r\n  methods: {\r\n    // Fungsi untuk mengambil data user dari server\r\n    async getUserData(userId) {\r\n      try {\r\n        const response = await axios.get(`http://127.0.0.1:5000/edit-user/${userId}`);\r\n        if (response.data) {\r\n          this.user = response.data; \r\n        } else {\r\n          this.notification.message = 'Pengguna tidak ditemukan';\r\n          this.notification.type = 'alert-danger';\r\n        }\r\n      } catch (error) {\r\n        this.notification.message = 'Gagal mengambil data pengguna';\r\n        this.notification.type = 'alert-danger';\r\n      }\r\n    },\r\n\r\n    async submitForm() {\r\n      this.errors = {};\r\n\r\n      // Validasi form\r\n      if (!this.user.nama) {\r\n        this.errors.nama = 'Nama tidak boleh kosong';\r\n      }\r\n      if (!this.user.email) {\r\n        this.errors.email = 'Email tidak boleh kosong';\r\n      } else if (!this.isValidEmail(this.user.email)) {\r\n        this.errors.email = 'Format email tidak valid';\r\n      }\r\n      if (!this.user.no_telp) {\r\n        this.errors.no_telp = 'Nomor telepon tidak boleh kosong';\r\n      }\r\n\r\n      if (Object.keys(this.errors).length > 0) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await axios.put(`http://127.0.0.1:5000/edit-user/${this.user.id}`, this.user);\r\n\r\n        this.notification.message = 'Data User berhasil diperbarui!';\r\n        this.notification.type = 'alert-success';\r\n\r\n        setTimeout(() => {\r\n          this.$router.push('/list-user');\r\n        }, 2000);\r\n      } catch (error) {\r\n        this.notification.message = 'Data gagal diperbarui!';\r\n        this.notification.type = 'alert-danger';\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    isValidEmail(email) {\r\n      const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n      return regex.test(email);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.notification {\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border-radius: 5px;\r\n}\r\n.alert-success {\r\n  color: #155724;\r\n  background-color: #d4edda;\r\n  border-color: #c3e6cb;\r\n}\r\n.alert-danger {\r\n  color: #721c24;\r\n  background-color: #f8d7da;\r\n  border-color: #f5c6cb;\r\n}\r\n.is-invalid {\r\n  border-color: #e3342f;\r\n}\r\n.invalid-feedback {\r\n  color: #e3342f;\r\n  font-size: 0.875em;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}