{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      kamarList: [],\n      // Array to store list of rooms\n      selectedKamar: null,\n      // To store selected room details\n      showModal: false // To control the visibility of the modal\n    };\n  },\n  created() {\n    this.fetchKamarList(); // Fetch list of rooms when the component is created\n  },\n  methods: {\n    async fetchKamarList() {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/list-kamar');\n        this.kamarList = response.data; // Store fetched rooms into kamarList\n        console.log(this.kamarList); // Debugging: Ensure the data is correct\n      } catch (error) {\n        console.error('Error fetching kamar list:', error);\n      }\n    },\n    getKamarStyle(status) {\n      const statusLower = status.toLowerCase(); // Convert to lowercase to ensure matching\n\n      // Define styles based on status_kamar\n      if (statusLower === 'tersedia') {\n        return {\n          backgroundColor: '#8BC34A'\n        }; // Soft Green for available rooms\n      } else if (statusLower === 'terisi') {\n        return {\n          backgroundColor: '#B0BEC5'\n        }; // Soft Gray for occupied rooms\n      } else if (statusLower === 'masa sewa akan habis') {\n        return {\n          backgroundColor: '#D30000'\n        }; // Red for rooms with expiring lease\n      } else if (statusLower === 'proses verifikasi') {\n        return {\n          backgroundColor: '#FFEB3B'\n        }; // Yellow for rooms under verification\n      }\n      return {\n        backgroundColor: '#E0E0E0'\n      }; // Default case (soft gray)\n    },\n    getNomorKamarStyle(status) {\n      const statusLower = status.toLowerCase(); // Convert to lowercase to ensure matching\n\n      // Define text color for the room number based on status_kamar\n      if (statusLower === 'masa sewa akan habis') {\n        return {\n          color: 'white'\n        }; // If red, text becomes white\n      } else if (statusLower === 'proses verifikasi') {\n        return {\n          color: '#333'\n        }; // Yellow status stays with dark text\n      }\n      return {\n        color: '#333'\n      }; // Default case (black text)\n    },\n    showDetail(kamar) {\n      this.selectedKamar = kamar; // Store the selected room details\n      this.showModal = true; // Show the modal\n    },\n    closeModal() {\n      this.showModal = false; // Close the modal\n      this.selectedKamar = null; // Clear selected room\n    }\n  }\n};","map":{"version":3,"names":["axios","data","kamarList","selectedKamar","showModal","created","fetchKamarList","methods","response","get","console","log","error","getKamarStyle","status","statusLower","toLowerCase","backgroundColor","getNomorKamarStyle","color","showDetail","kamar","closeModal"],"sources":["D:\\SEMESTER 5\\Proyek\\Kost\\frontend\\src\\views\\ListKamar.vue"],"sourcesContent":["<template>\r\n  <div class=\"kamar-container\">\r\n    <div class=\"keterangan-warna\">\r\n      <h5><b>Keterangan</b></h5>\r\n      <p><span class=\"warna-hijau\"></span> Kamar yang tersedia</p>\r\n      <p><span class=\"warna-kuning\"></span> Dalam proses verifikasi</p>\r\n      <p><span class=\"warna-merah\"></span> Masa sewa akan habis</p>\r\n      <p><span class=\"warna-abu\"></span> Kamar yang terisi</p>\r\n    </div>\r\n    \r\n    <!-- Lantai 1 -->\r\n    <div v-if=\"kamarList.length > 0\">\r\n      <h2>Lantai 1</h2>\r\n      <div class=\"kamar-row\">\r\n        <div v-for=\"kamar in kamarList.filter(k => k.nomor_kamar <= 10).sort((a, b) => a.nomor_kamar - b.nomor_kamar)\" :key=\"kamar.id\" \r\n             class=\"kamar-card\"\r\n             :style=\"getKamarStyle(kamar.status_kamar)\"\r\n             @click=\"showDetail(kamar)\">\r\n          <div class=\"kamar-item\">\r\n            <div class=\"nomor-kamar\" :style=\"getNomorKamarStyle(kamar.status_kamar)\">{{ kamar.nomor_kamar }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Lantai 2 -->\r\n    <div v-if=\"kamarList.length > 0\">\r\n      <h2>Lantai 2</h2>\r\n      <div class=\"kamar-row\">\r\n        <div v-for=\"kamar in kamarList.filter(k => k.nomor_kamar > 10).sort((a, b) => a.nomor_kamar - b.nomor_kamar)\" :key=\"kamar.id\" \r\n             class=\"kamar-card\"\r\n             :style=\"getKamarStyle(kamar.status_kamar)\"\r\n             @click=\"showDetail(kamar)\">\r\n          <div class=\"kamar-item\">\r\n            <div class=\"nomor-kamar\" :style=\"getNomorKamarStyle(kamar.status_kamar)\">{{ kamar.nomor_kamar }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal Detail Kamar -->\r\n    <div v-if=\"showModal\" class=\"modal\" @click.self=\"closeModal\">\r\n      <div class=\"modal-content\">\r\n        <h3>Detail Kamar</h3>\r\n        <p><strong>Nomor Kamar : </strong> {{ selectedKamar.nomor_kamar }}</p>\r\n        <p><strong>Status Kamar : </strong> {{ selectedKamar.status_kamar }}</p>\r\n        <p><strong>Nama Penyewa : </strong> {{ selectedKamar.nama }}</p>\r\n        <button @click=\"closeModal\">Tutup</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      kamarList: [],         // Array to store list of rooms\r\n      selectedKamar: null,   // To store selected room details\r\n      showModal: false       // To control the visibility of the modal\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchKamarList();  // Fetch list of rooms when the component is created\r\n  },\r\n  methods: {\r\n    async fetchKamarList() {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/list-kamar');\r\n        this.kamarList = response.data;  // Store fetched rooms into kamarList\r\n        console.log(this.kamarList);  // Debugging: Ensure the data is correct\r\n      } catch (error) {\r\n        console.error('Error fetching kamar list:', error);\r\n      }\r\n    },\r\n    getKamarStyle(status) {\r\n      const statusLower = status.toLowerCase();  // Convert to lowercase to ensure matching\r\n\r\n      // Define styles based on status_kamar\r\n      if (statusLower === 'tersedia') {\r\n        return { backgroundColor: '#8BC34A' };  // Soft Green for available rooms\r\n      } else if (statusLower === 'terisi') {\r\n        return { backgroundColor: '#B0BEC5' };  // Soft Gray for occupied rooms\r\n      } else if (statusLower === 'masa sewa akan habis') {\r\n        return { backgroundColor: '#D30000' };  // Red for rooms with expiring lease\r\n      } else if (statusLower === 'proses verifikasi') {\r\n        return { backgroundColor: '#FFEB3B' };  // Yellow for rooms under verification\r\n      }\r\n      return { backgroundColor: '#E0E0E0' };  // Default case (soft gray)\r\n    },\r\n    getNomorKamarStyle(status) {\r\n      const statusLower = status.toLowerCase();  // Convert to lowercase to ensure matching\r\n\r\n      // Define text color for the room number based on status_kamar\r\n      if (statusLower === 'masa sewa akan habis') {\r\n        return { color: 'white' };  // If red, text becomes white\r\n      } else if (statusLower === 'proses verifikasi') {\r\n        return { color: '#333' };  // Yellow status stays with dark text\r\n      }\r\n      return { color: '#333' };  // Default case (black text)\r\n    },\r\n    showDetail(kamar) {\r\n      this.selectedKamar = kamar;  // Store the selected room details\r\n      this.showModal = true;       // Show the modal\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;     // Close the modal\r\n      this.selectedKamar = null;  // Clear selected room\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.kamar-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 40px;\r\n  padding: 20px;\r\n  margin-top: 50px;  /* Add top margin */\r\n}\r\n\r\nh2 {\r\n  margin-bottom: 20px;\r\n  color: #75276d;  /* Purple color */\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n}\r\n\r\nh5 {\r\n  color: #75276d;\r\n}\r\n\r\n.kamar-row {\r\n  display: flex;\r\n  gap: 20px;  /* Add space between rooms */\r\n  flex-wrap: wrap;  /* Keep rooms wrapped if too many */\r\n}\r\n\r\n.kamar-card {\r\n  width: 140px;\r\n  height: 140px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: transform 0.3s;\r\n}\r\n\r\n.kamar-card:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.kamar-item {\r\n  text-align: center;\r\n}\r\n\r\n.nomor-kamar {\r\n  color: #333;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 300px;\r\n  text-align: left;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  background-color: #c20ab0;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #9b0a7f;\r\n}\r\n\r\n.keterangan-warna {\r\n  margin-bottom: 20px;\r\n  font-size: 14px;\r\n}\r\n\r\n.keterangan-warna p {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 5px 0;\r\n}\r\n\r\n.keterangan-warna .warna-hijau,\r\n.keterangan-warna .warna-kuning,\r\n.keterangan-warna .warna-merah,\r\n.keterangan-warna .warna-abu {\r\n  display: inline-block;\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-right: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.keterangan-warna .warna-hijau {\r\n  background-color: #8BC34A;\r\n}\r\n\r\n.keterangan-warna .warna-kuning {\r\n  background-color: #FFEB3B;\r\n}\r\n\r\n.keterangan-warna .warna-merah {\r\n  background-color: #D30000;\r\n}\r\n\r\n.keterangan-warna .warna-abu {\r\n  background-color: #B0BEC5;\r\n}\r\n</style>\r\n"],"mappings":"AAsDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MAAU;MACvBC,aAAa,EAAE,IAAI;MAAI;MACvBC,SAAS,EAAE,KAAI,CAAQ;IACzB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC,EAAG;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,kCAAkC,CAAC;QACpE,IAAI,CAACP,SAAQ,GAAIM,QAAQ,CAACP,IAAI,EAAG;QACjCS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,SAAS,CAAC,EAAG;MAChC,EAAE,OAAOU,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDC,aAAaA,CAACC,MAAM,EAAE;MACpB,MAAMC,WAAU,GAAID,MAAM,CAACE,WAAW,CAAC,CAAC,EAAG;;MAE3C;MACA,IAAID,WAAU,KAAM,UAAU,EAAE;QAC9B,OAAO;UAAEE,eAAe,EAAE;QAAU,CAAC,EAAG;MAC1C,OAAO,IAAIF,WAAU,KAAM,QAAQ,EAAE;QACnC,OAAO;UAAEE,eAAe,EAAE;QAAU,CAAC,EAAG;MAC1C,OAAO,IAAIF,WAAU,KAAM,sBAAsB,EAAE;QACjD,OAAO;UAAEE,eAAe,EAAE;QAAU,CAAC,EAAG;MAC1C,OAAO,IAAIF,WAAU,KAAM,mBAAmB,EAAE;QAC9C,OAAO;UAAEE,eAAe,EAAE;QAAU,CAAC,EAAG;MAC1C;MACA,OAAO;QAAEA,eAAe,EAAE;MAAU,CAAC,EAAG;IAC1C,CAAC;IACDC,kBAAkBA,CAACJ,MAAM,EAAE;MACzB,MAAMC,WAAU,GAAID,MAAM,CAACE,WAAW,CAAC,CAAC,EAAG;;MAE3C;MACA,IAAID,WAAU,KAAM,sBAAsB,EAAE;QAC1C,OAAO;UAAEI,KAAK,EAAE;QAAQ,CAAC,EAAG;MAC9B,OAAO,IAAIJ,WAAU,KAAM,mBAAmB,EAAE;QAC9C,OAAO;UAAEI,KAAK,EAAE;QAAO,CAAC,EAAG;MAC7B;MACA,OAAO;QAAEA,KAAK,EAAE;MAAO,CAAC,EAAG;IAC7B,CAAC;IACDC,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAAClB,aAAY,GAAIkB,KAAK,EAAG;MAC7B,IAAI,CAACjB,SAAQ,GAAI,IAAI,EAAQ;IAC/B,CAAC;IACDkB,UAAUA,CAAA,EAAG;MACX,IAAI,CAAClB,SAAQ,GAAI,KAAK,EAAM;MAC5B,IAAI,CAACD,aAAY,GAAI,IAAI,EAAG;IAC9B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}