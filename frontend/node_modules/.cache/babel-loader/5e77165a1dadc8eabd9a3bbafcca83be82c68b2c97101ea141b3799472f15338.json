{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      api: 'http://127.0.0.1:5000/pengeluaran',\n      // API endpoint\n      pengeluaranData: [],\n      // Data pengeluaran\n      searchQuery: '',\n      // Query pencarian\n      perPage: 5,\n      // Jumlah data per halaman\n      currentPage: 1,\n      // Halaman saat ini\n      totalPengeluaran: 0 // Total pengeluaran keseluruhan\n    };\n  },\n  created() {\n    this.getPengeluaranData(); // Mengambil data pengeluaran saat komponen dibuat\n  },\n  computed: {\n    // Filter data berdasarkan query pencarian\n    filteredPengeluaran() {\n      return this.pengeluaranData.filter(data => {\n        const searchTerm = this.searchQuery.toLowerCase();\n        const keterangan = data.keterangan ? data.keterangan.toLowerCase() : '';\n        const tanggal = data.tanggal ? data.tanggal.toLowerCase() : '';\n        return keterangan.includes(searchTerm) || tanggal.includes(searchTerm);\n      });\n    },\n    // Total halaman untuk paginasi\n    totalPages() {\n      return Math.ceil(this.filteredPengeluaran.length / this.perPage);\n    },\n    // Data yang akan ditampilkan pada halaman saat ini\n    paginatedPengeluaran() {\n      const start = (this.currentPage - 1) * this.perPage;\n      const end = start + this.perPage;\n      return this.filteredPengeluaran.slice(start, end);\n    }\n  },\n  methods: {\n    // Fungsi untuk mengambil data dari API\n    getPengeluaranData() {\n      axios.get(this.api).then(response => {\n        if (response.data && response.data.data) {\n          this.pengeluaranData = response.data.data; // Ambil data pengeluaran\n          this.totalPengeluaran = this.pengeluaranData.reduce((total, item) => total + item.jumlah_pengeluaran, 0); // Hitung total pengeluaran\n        } else {\n          console.error('Data tidak sesuai:', response.data);\n        }\n      }).catch(error => {\n        console.error('Terjadi kesalahan:', error);\n      });\n    },\n    // Fungsi untuk format uang (contoh: 1000000 -> Rp 1.000.000)\n    formatCurrency(amount) {\n      return 'Rp ' + amount.toLocaleString();\n    },\n    // Fungsi untuk ke halaman sebelumnya\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    // Fungsi untuk ke halaman selanjutnya\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","api","pengeluaranData","searchQuery","perPage","currentPage","totalPengeluaran","created","getPengeluaranData","computed","filteredPengeluaran","filter","searchTerm","toLowerCase","keterangan","tanggal","includes","totalPages","Math","ceil","length","paginatedPengeluaran","start","end","slice","methods","get","then","response","reduce","total","item","jumlah_pengeluaran","console","error","catch","formatCurrency","amount","toLocaleString","previousPage","nextPage"],"sources":["D:\\SEMESTER 5\\Proyek\\Kost\\frontend\\src\\views\\ListPengeluaran.vue"],"sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header d-flex justify-content-between\">\r\n            <h4 class=\"card-title\">Daftar Pengeluaran</h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <!-- Search bar dan Total Pengeluaran disusun sejajar -->\r\n            <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n              <!-- Total Pengeluaran -->\r\n              <h6 class=\"total-pengeluaran\">Total Pengeluaran: {{ formatCurrency(totalPengeluaran) }}</h6>\r\n  \r\n              <!-- Search bar -->\r\n              <input \r\n                v-model=\"searchQuery\" \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                placeholder=\"Cari keterangan atau tanggal...\" \r\n                style=\"width: 250px;\" \r\n              />\r\n            </div>\r\n            \r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"text-primary\">\r\n                  <tr>\r\n                    <th>Tanggal</th>\r\n                    <th>Keterangan</th>\r\n                    <th>Jumlah Pengeluaran</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"(data, index) in paginatedPengeluaran\" :key=\"index\">\r\n                    <td>{{ data.tanggal }}</td>\r\n                    <td>{{ data.keterangan }}</td>\r\n                    <td>{{ formatCurrency(data.jumlah_pengeluaran) }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n            <!-- Pagination -->\r\n            <div class=\"pagination-container d-flex justify-content-between mt-3\">\r\n              <span>Halaman {{ currentPage }} dari {{ totalPages }}</span>\r\n              <div class=\"pagination-buttons d-flex justify-content-end\">\r\n                <button \r\n                  class=\"btn btn-purple btn-sm\" \r\n                  :disabled=\"currentPage === 1\" \r\n                  @click=\"previousPage\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button \r\n                  class=\"btn btn-purple btn-sm\" \r\n                  :disabled=\"currentPage === totalPages\" \r\n                  @click=\"nextPage\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      api: 'http://127.0.0.1:5000/pengeluaran', // API endpoint\r\n      pengeluaranData: [], // Data pengeluaran\r\n      searchQuery: '',  // Query pencarian\r\n      perPage: 5,  // Jumlah data per halaman\r\n      currentPage: 1,  // Halaman saat ini\r\n      totalPengeluaran: 0, // Total pengeluaran keseluruhan\r\n    };\r\n  },\r\n  created() {\r\n    this.getPengeluaranData(); // Mengambil data pengeluaran saat komponen dibuat\r\n  },\r\n  computed: {\r\n    // Filter data berdasarkan query pencarian\r\n    filteredPengeluaran() {\r\n      return this.pengeluaranData.filter(data => {\r\n        const searchTerm = this.searchQuery.toLowerCase();\r\n        const keterangan = data.keterangan ? data.keterangan.toLowerCase() : '';\r\n        const tanggal = data.tanggal ? data.tanggal.toLowerCase() : '';\r\n        return (\r\n          keterangan.includes(searchTerm) || \r\n          tanggal.includes(searchTerm)\r\n        );\r\n      });\r\n    },\r\n    // Total halaman untuk paginasi\r\n    totalPages() {\r\n      return Math.ceil(this.filteredPengeluaran.length / this.perPage);\r\n    },\r\n    // Data yang akan ditampilkan pada halaman saat ini\r\n    paginatedPengeluaran() {\r\n      const start = (this.currentPage - 1) * this.perPage;\r\n      const end = start + this.perPage;\r\n      return this.filteredPengeluaran.slice(start, end);\r\n    }\r\n  },\r\n  methods: {\r\n    // Fungsi untuk mengambil data dari API\r\n    getPengeluaranData() {\r\n      axios.get(this.api)\r\n        .then(response => {\r\n          if (response.data && response.data.data) {\r\n            this.pengeluaranData = response.data.data; // Ambil data pengeluaran\r\n            this.totalPengeluaran = this.pengeluaranData.reduce((total, item) => total + item.jumlah_pengeluaran, 0); // Hitung total pengeluaran\r\n          } else {\r\n            console.error('Data tidak sesuai:', response.data);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Terjadi kesalahan:', error);\r\n        });\r\n    },\r\n    // Fungsi untuk format uang (contoh: 1000000 -> Rp 1.000.000)\r\n    formatCurrency(amount) {\r\n      return 'Rp ' + amount.toLocaleString();\r\n    },\r\n    // Fungsi untuk ke halaman sebelumnya\r\n    previousPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    // Fungsi untuk ke halaman selanjutnya\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.total-pengeluaran {\r\n  color: #75276d; /* Warna ungu */\r\n}\r\n\r\n.table th, .table td {\r\n  text-align: center;\r\n}\r\n\r\n.table th {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.btn-sm {\r\n  margin: 0 5px;\r\n}\r\n\r\n.btn-purple {\r\n  background-color: #75276d;\r\n  color: white;\r\n}\r\n\r\n.btn-purple:hover {\r\n  background-color: #5e1d57;\r\n}\r\n\r\n.pagination-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.pagination-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}