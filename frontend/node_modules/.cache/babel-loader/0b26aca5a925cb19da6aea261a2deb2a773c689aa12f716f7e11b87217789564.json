{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      api: 'http://127.0.0.1:5000/total-pendapatan',\n      // API endpoint\n      financialData: [],\n      // Data pendapatan bersih per tahun\n      searchQuery: '',\n      // Query pencarian\n      perPage: 5,\n      // Jumlah data per halaman\n      currentPage: 1,\n      // Halaman saat ini\n      totalPendapatanKeseluruhan: 0 // Total pendapatan keseluruhan\n    };\n  },\n  created() {\n    this.getFinancialData(); // Mengambil data saat komponen dibuat\n  },\n  computed: {\n    // Filter data berdasarkan query pencarian\n    filteredFinancialData() {\n      return this.financialData.filter(data => {\n        const searchTerm = this.searchQuery.toLowerCase();\n        const tahun = data.tahun.toString().toLowerCase();\n        return tahun.includes(searchTerm);\n      });\n    },\n    // Total halaman untuk paginasi\n    totalPages() {\n      return Math.ceil(this.filteredFinancialData.length / this.perPage);\n    },\n    // Data yang akan ditampilkan pada halaman saat ini\n    paginatedFinancialData() {\n      const start = (this.currentPage - 1) * this.perPage;\n      const end = start + this.perPage;\n      return this.filteredFinancialData.slice(start, end);\n    }\n  },\n  methods: {\n    // Fungsi untuk mengambil data dari API\n    getFinancialData() {\n      axios.get(this.api).then(response => {\n        if (response.data && response.data.data) {\n          // Konversi data API ke format yang sesuai untuk tabel\n          this.financialData = Object.entries(response.data.data.total_per_tahun).map(([tahun, pendapatan_bersih]) => ({\n            tahun,\n            pendapatan_bersih\n          }));\n\n          // Ambil total pendapatan keseluruhan\n          this.totalPendapatanKeseluruhan = response.data.data.total_pendapatan_keseluruhan;\n        } else {\n          console.error('Data tidak sesuai:', response.data);\n        }\n      }).catch(error => {\n        console.error('Terjadi kesalahan:', error);\n      });\n    },\n    // Fungsi untuk format uang (contoh: 1000000 -> Rp 1.000.000)\n    formatCurrency(amount) {\n      return 'Rp ' + amount.toLocaleString();\n    },\n    // Fungsi untuk ke halaman sebelumnya\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    // Fungsi untuk ke halaman selanjutnya\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","api","financialData","searchQuery","perPage","currentPage","totalPendapatanKeseluruhan","created","getFinancialData","computed","filteredFinancialData","filter","searchTerm","toLowerCase","tahun","toString","includes","totalPages","Math","ceil","length","paginatedFinancialData","start","end","slice","methods","get","then","response","Object","entries","total_per_tahun","map","pendapatan_bersih","total_pendapatan_keseluruhan","console","error","catch","formatCurrency","amount","toLocaleString","previousPage","nextPage"],"sources":["D:\\SEMESTER 5\\Proyek\\Kost\\frontend\\src\\views\\FinancialView.vue"],"sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header d-flex justify-content-between\">\r\n            <h4 class=\"card-title\">Pendapatan</h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <!-- Search bar dan Total Pendapatan disusun sejajar -->\r\n            <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n              <!-- Total Pendapatan -->\r\n              <h6 class=\"total-pendapatan\">\r\n                Total Pendapatan: {{ formatCurrency(totalPendapatanKeseluruhan) }}\r\n              </h6>\r\n\r\n              <!-- Search bar -->\r\n              <input \r\n                v-model=\"searchQuery\" \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                placeholder=\"Cari tahun...\" \r\n                style=\"width: 250px;\" \r\n              />\r\n            </div>\r\n\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"text-primary\">\r\n                  <tr>\r\n                    <th>Tahun</th>\r\n                    <th>Pendapatan Bersih</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"(data, index) in paginatedFinancialData\" :key=\"index\">\r\n                    <td>{{ data.tahun }}</td>\r\n                    <td>{{ formatCurrency(data.pendapatan_bersih) }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            <!-- Pagination -->\r\n            <div class=\"pagination-container d-flex justify-content-between mt-3\">\r\n              <span>Halaman {{ currentPage }} dari {{ totalPages }}</span>\r\n              <div class=\"pagination-buttons d-flex justify-content-end\">\r\n                <button \r\n                  class=\"btn btn-purple btn-sm\" \r\n                  :disabled=\"currentPage === 1\" \r\n                  @click=\"previousPage\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button \r\n                  class=\"btn btn-purple btn-sm\" \r\n                  :disabled=\"currentPage === totalPages\" \r\n                  @click=\"nextPage\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      api: 'http://127.0.0.1:5000/total-pendapatan', // API endpoint\r\n      financialData: [], // Data pendapatan bersih per tahun\r\n      searchQuery: '', // Query pencarian\r\n      perPage: 5, // Jumlah data per halaman\r\n      currentPage: 1, // Halaman saat ini\r\n      totalPendapatanKeseluruhan: 0, // Total pendapatan keseluruhan\r\n    };\r\n  },\r\n  created() {\r\n    this.getFinancialData(); // Mengambil data saat komponen dibuat\r\n  },\r\n  computed: {\r\n    // Filter data berdasarkan query pencarian\r\n    filteredFinancialData() {\r\n      return this.financialData.filter((data) => {\r\n        const searchTerm = this.searchQuery.toLowerCase();\r\n        const tahun = data.tahun.toString().toLowerCase();\r\n        return tahun.includes(searchTerm);\r\n      });\r\n    },\r\n    // Total halaman untuk paginasi\r\n    totalPages() {\r\n      return Math.ceil(this.filteredFinancialData.length / this.perPage);\r\n    },\r\n    // Data yang akan ditampilkan pada halaman saat ini\r\n    paginatedFinancialData() {\r\n      const start = (this.currentPage - 1) * this.perPage;\r\n      const end = start + this.perPage;\r\n      return this.filteredFinancialData.slice(start, end);\r\n    },\r\n  },\r\n  methods: {\r\n    // Fungsi untuk mengambil data dari API\r\n    getFinancialData() {\r\n      axios\r\n        .get(this.api)\r\n        .then((response) => {\r\n          if (response.data && response.data.data) {\r\n            // Konversi data API ke format yang sesuai untuk tabel\r\n            this.financialData = Object.entries(response.data.data.total_per_tahun).map(([tahun, pendapatan_bersih]) => ({\r\n              tahun,\r\n              pendapatan_bersih,\r\n            }));\r\n\r\n            // Ambil total pendapatan keseluruhan\r\n            this.totalPendapatanKeseluruhan = response.data.data.total_pendapatan_keseluruhan;\r\n          } else {\r\n            console.error('Data tidak sesuai:', response.data);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Terjadi kesalahan:', error);\r\n        });\r\n    },\r\n    // Fungsi untuk format uang (contoh: 1000000 -> Rp 1.000.000)\r\n    formatCurrency(amount) {\r\n      return 'Rp ' + amount.toLocaleString();\r\n    },\r\n    // Fungsi untuk ke halaman sebelumnya\r\n    previousPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    // Fungsi untuk ke halaman selanjutnya\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .total-pendapatan {\r\n    color: #75276d; /* Warna ungu */\r\n  }\r\n  \r\n  .table th, .table td {\r\n    text-align: center;\r\n  }\r\n  \r\n  .table th {\r\n    background-color: #f8f9fa;\r\n  }\r\n  \r\n  .btn-sm {\r\n    margin: 0 5px;\r\n  }\r\n  \r\n  .btn-warning {\r\n    background-color: #ffc107;\r\n  }\r\n  \r\n  .btn-danger {\r\n    background-color: #dc3545;\r\n  }\r\n  \r\n  .btn-purple {\r\n    background-color: #75276d;\r\n    color: white;\r\n  }\r\n  \r\n  .btn-purple:hover {\r\n    background-color: #5e1d57;\r\n  }\r\n  \r\n  .pagination-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  \r\n  .pagination-buttons {\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .modal-backdrop {\r\n    z-index: 1040;\r\n  }\r\n  </style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}