{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      api: 'http://127.0.0.1:5000/list-user',\n      users: [],\n      searchQuery: '',\n      perPage: 5,\n      // Change items per page to 5\n      currentPage: 1\n    };\n  },\n  created() {\n    this.getUsers();\n  },\n  computed: {\n    filteredUsers() {\n      return this.users.filter(user => {\n        const searchTerm = this.searchQuery.toLowerCase();\n        return user.id && user.id.toString().includes(searchTerm) || user.nama && user.nama.toLowerCase().includes(searchTerm) || user.email && user.email.toLowerCase().includes(searchTerm) || user.roles && user.roles.toLowerCase().includes(searchTerm) || user.no_telp && user.no_telp.toLowerCase().includes(searchTerm);\n      });\n    },\n    totalPages() {\n      return Math.ceil(this.filteredUsers.length / this.perPage);\n    },\n    paginatedUsers() {\n      const start = (this.currentPage - 1) * this.perPage;\n      const end = start + this.perPage;\n      return this.filteredUsers.slice(start, end);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","api","users","searchQuery","perPage","currentPage","created","getUsers","computed","filteredUsers","filter","user","searchTerm","toLowerCase","id","toString","includes","nama","email","roles","no_telp","totalPages","Math","ceil","length","paginatedUsers","start","end","slice"],"sources":["D:\\SEMESTER 5\\Proyek\\Web_Kost\\frontend\\src\\views\\ListUser.vue"],"sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header d-flex justify-content-between\">\r\n            <h4 class=\"card-title\">Daftar User</h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex justify-content-between mb-3\">\r\n              <router-link to=\"/tambah-user\">\r\n                <button class=\"btn btn-purple btn-sm\">Tambah Data</button>\r\n              </router-link>\r\n              <input \r\n                v-model=\"searchQuery\" \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                placeholder=\"Cari user...\" \r\n                style=\"width: 250px;\" \r\n              />\r\n            </div>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"text-primary\">\r\n                  <tr>\r\n                    <th>No</th>\r\n                    <th>Nama</th>\r\n                    <th>Email</th>\r\n                    <th>Role</th>\r\n                    <th>Phone</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"(user, index) in paginatedUsers\" :key=\"user.id\">\r\n                    <td>{{ (currentPage - 1) * perPage + (index + 1) }}</td>\r\n                    <td>{{ user.nama }}</td>\r\n                    <td>{{ user.email }}</td>\r\n                    <td>{{ user.roles }}</td>\r\n                    <td>{{ user.no_telp }}</td>\r\n                    <td class=\"text-right\">\r\n                      <router-link :to=\"`/edit-user/${user.id}`\">\r\n                        <button class=\"btn btn-warning btn-sm\">Edit</button>\r\n                      </router-link>\r\n                      <button class=\"btn btn-danger btn-sm\" @click=\"confirmDelete(user.id)\">Hapus</button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            \r\n            <!-- Paginasi -->\r\n            <div class=\"pagination-container d-flex justify-content-between mt-3\">\r\n              <!-- Teks Halaman Kiri -->\r\n              <span>Halaman {{ currentPage }} dari {{ totalPages }}</span>\r\n\r\n              <!-- Tombol Paginasi Kanan -->\r\n              <div class=\"pagination-buttons d-flex justify-content-end\">\r\n                <button \r\n                  class=\"btn btn-purple btn-sm\" \r\n                  :disabled=\"currentPage === 1\" \r\n                  @click=\"previousPage\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button \r\n                  class=\"btn btn-purple btn-sm\" \r\n                  :disabled=\"currentPage === totalPages\" \r\n                  @click=\"nextPage\"\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      api: 'http://127.0.0.1:5000/list-user',\r\n      users: [],\r\n      searchQuery: '',\r\n      perPage: 5,  // Change items per page to 5\r\n      currentPage: 1\r\n    };\r\n  },\r\n  created() {\r\n    this.getUsers(); \r\n  },\r\n  computed: {\r\n    filteredUsers() {\r\n      return this.users.filter(user => {\r\n        const searchTerm = this.searchQuery.toLowerCase();\r\n        return (\r\n          (user.id && user.id.toString().includes(searchTerm)) || \r\n          (user.nama && user.nama.toLowerCase().includes(searchTerm)) ||\r\n          (user.email && user.email.toLowerCase().includes(searchTerm)) ||\r\n          (user.roles && user.roles.toLowerCase().includes(searchTerm)) ||\r\n          (user.no_telp && user.no_telp.toLowerCase().includes(searchTerm))\r\n        );\r\n      });\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredUsers.length / this.perPage);\r\n    },\r\n    paginatedUsers() {\r\n      const start = (this.currentPage - 1) * this.perPage;\r\n      const end = start + this.perPage;\r\n      return this.filteredUsers.slice(start, end);\r\n    }\r\n  },\r\n  \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.table th, .table td {\r\n  text-align: center;\r\n}\r\n\r\n.table th {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.btn-sm {\r\n  margin: 0 5px;\r\n}\r\n\r\n.btn-warning {\r\n  background-color: #ffc107;\r\n}\r\n\r\n.btn-danger {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.btn-purple {\r\n  background-color: #75276d; \r\n  color: white;\r\n}\r\n\r\n.btn-purple:hover {\r\n  background-color: #5e1d57; \r\n}\r\n\r\n/* Paginasi */\r\n.pagination-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.pagination-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;AAkFA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,iCAAiC;MACtCC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,CAAC;MAAG;MACbC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,CAAC,CAAC;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACP,KAAK,CAACQ,MAAM,CAACC,IAAG,IAAK;QAC/B,MAAMC,UAAS,GAAI,IAAI,CAACT,WAAW,CAACU,WAAW,CAAC,CAAC;QACjD,OACGF,IAAI,CAACG,EAAC,IAAKH,IAAI,CAACG,EAAE,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAACJ,UAAU,CAAC,IAClDD,IAAI,CAACM,IAAG,IAAKN,IAAI,CAACM,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,UAAU,CAAC,IACzDD,IAAI,CAACO,KAAI,IAAKP,IAAI,CAACO,KAAK,CAACL,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,UAAU,CAAC,IAC3DD,IAAI,CAACQ,KAAI,IAAKR,IAAI,CAACQ,KAAK,CAACN,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,UAAU,CAAC,IAC3DD,IAAI,CAACS,OAAM,IAAKT,IAAI,CAACS,OAAO,CAACP,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,UAAU,CAAC;MAEpE,CAAC,CAAC;IACJ,CAAC;IACDS,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACd,aAAa,CAACe,MAAK,GAAI,IAAI,CAACpB,OAAO,CAAC;IAC5D,CAAC;IACDqB,cAAcA,CAAA,EAAG;MACf,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACrB,WAAU,GAAI,CAAC,IAAI,IAAI,CAACD,OAAO;MACnD,MAAMuB,GAAE,GAAID,KAAI,GAAI,IAAI,CAACtB,OAAO;MAChC,OAAO,IAAI,CAACK,aAAa,CAACmB,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IAC7C;EACF;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}