{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  data() {\n    return {\n      // Simulate the initial user data (you can replace this with an API call)\n      users: [{\n        id: 3,\n        nama: \"Aura\",\n        email: \"aura@example.com\",\n        phone: \"081234567890\",\n        status: \"active\"\n      }, {\n        id: 4,\n        nama: \"Aura\",\n        email: \"aura@example.com\",\n        phone: \"081234567890\",\n        status: \"masa sewa akan habis\"\n      }, {\n        id: 3,\n        nama: \"Aura\",\n        email: \"aura@example.com\",\n        phone: \"081234567890\",\n        status: \"masa sewa habis\"\n      }],\n      searchQuery: '' // for storing the search input\n    };\n  },\n  computed: {\n    // Computed property for filtered users based on search query\n    filteredUsers() {\n      return this.users.filter(user => {\n        return user.nama.toLowerCase().includes(this.searchQuery.toLowerCase()) || user.email.toLowerCase().includes(this.searchQuery.toLowerCase()) || user.phone.includes(this.searchQuery);\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","users","id","nama","email","phone","status","searchQuery","computed","filteredUsers","filter","user","toLowerCase","includes"],"sources":["D:\\SEMESTER 5\\Proyek\\Web_Kost\\frontend\\src\\views\\StatusPenyewa.vue"],"sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header d-flex justify-content-between\">\r\n            <h4 class=\"card-title\">Status Penyewa</h4>\r\n            <!-- Search Input -->\r\n            <input \r\n              v-model=\"searchQuery\" \r\n              type=\"text\" \r\n              class=\"form-control\" \r\n              placeholder=\"Cari penyewa...\" \r\n              style=\"width: 250px;\" \r\n            />\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"text-primary\">\r\n                  <tr>\r\n                    <th>No</th>\r\n                    <th>Nama</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <!-- Loop through the users array and display each user with filter -->\r\n                  <tr v-for=\"(user, index) in filteredUsers\" :key=\"user.id\">\r\n                    <td>{{ index + 1 }}</td>\r\n                    <td>{{ user.nama }}</td>\r\n                    <td>{{ user.email }}</td>\r\n                    <td>{{ user.phone }}</td>\r\n                    <td>{{ user.status }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // Simulate the initial user data (you can replace this with an API call)\r\n      users: [\r\n        { id: 3, nama: \"Aura\", email: \"aura@example.com\", phone: \"081234567890\", status: \"active\" },\r\n        { id: 4, nama: \"Aura\", email: \"aura@example.com\", phone: \"081234567890\", status: \"masa sewa akan habis\" },\r\n        { id: 3, nama: \"Aura\", email: \"aura@example.com\", phone: \"081234567890\", status: \"masa sewa habis\" }\r\n      ],\r\n      searchQuery: ''  // for storing the search input\r\n    };\r\n  },\r\n  computed: {\r\n    // Computed property for filtered users based on search query\r\n    filteredUsers() {\r\n      return this.users.filter(user => {\r\n        return (\r\n          user.nama.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          user.email.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n          user.phone.includes(this.searchQuery)\r\n        );\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styling for the table and buttons */\r\n.table th, .table td {\r\n  text-align: center;\r\n}\r\n\r\n.table th {\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.btn-sm {\r\n  margin: 0 5px;\r\n}\r\n\r\n.btn-info {\r\n  background-color: #17a2b8;\r\n}\r\n\r\n.btn-success {\r\n  background-color: #28a745;\r\n}\r\n\r\n.btn-warning {\r\n  background-color: #ffc107;\r\n}\r\n\r\n.btn-danger {\r\n  background-color: #dc3545;\r\n}\r\n</style>\r\n"],"mappings":";;AAgDA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,KAAK,EAAE,CACL;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE,kBAAkB;QAAEC,KAAK,EAAE,cAAc;QAAEC,MAAM,EAAE;MAAS,CAAC,EAC3F;QAAEJ,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE,kBAAkB;QAAEC,KAAK,EAAE,cAAc;QAAEC,MAAM,EAAE;MAAuB,CAAC,EACzG;QAAEJ,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE,kBAAkB;QAAEC,KAAK,EAAE,cAAc;QAAEC,MAAM,EAAE;MAAkB,EACpG;MACDC,WAAW,EAAE,EAAC,CAAG;IACnB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACR,KAAK,CAACS,MAAM,CAACC,IAAG,IAAK;QAC/B,OACEA,IAAI,CAACR,IAAI,CAACS,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACN,WAAW,CAACK,WAAW,CAAC,CAAC,KAC/DD,IAAI,CAACP,KAAK,CAACQ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACN,WAAW,CAACK,WAAW,CAAC,CAAC,KAChED,IAAI,CAACN,KAAK,CAACQ,QAAQ,CAAC,IAAI,CAACN,WAAW;MAExC,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}