{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      kamarList: [],\n      selectedKamar: null,\n      showModal: false\n    };\n  },\n  created() {\n    this.fetchKamarList();\n  },\n  methods: {\n    async fetchKamarList() {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/list-kamar');\n        this.kamarList = response.data;\n      } catch (error) {\n        console.error('Error fetching kamar list:', error);\n      }\n    },\n    getKamarStyle(status) {\n      if (status === 'Tersedia') {\n        return {\n          backgroundColor: 'green'\n        };\n      } else if (status === 'Terisi') {\n        return {\n          backgroundColor: 'gray'\n        };\n      } else if (status === 'Masa Sewa Akan Habis') {\n        return {\n          backgroundColor: 'red'\n        };\n      }\n      return {\n        backgroundColor: 'lightgray'\n      }; // default case\n    },\n    showDetail(kamar) {\n      this.selectedKamar = kamar;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedKamar = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","kamarList","selectedKamar","showModal","created","fetchKamarList","methods","response","get","error","console","getKamarStyle","status","backgroundColor","showDetail","kamar","closeModal"],"sources":["D:\\SEMESTER 5\\Proyek\\Web_Kost\\frontend\\src\\views\\ListKamar.vue"],"sourcesContent":["<template>\r\n    <div class=\"kamar-container\">\r\n      <div v-for=\"kamar in kamarList\" :key=\"kamar.id\" \r\n           class=\"kamar-item\"\r\n           :style=\"getKamarStyle(kamar.status_kamar)\"\r\n           @click=\"showDetail(kamar)\">\r\n        <div class=\"nomor-kamar\">{{ kamar.nomor_kamar }}</div>\r\n      </div>\r\n  \r\n      <!-- Modal Detail Kamar -->\r\n      <div v-if=\"showModal\" class=\"modal\" @click.self=\"closeModal\">\r\n        <div class=\"modal-content\">\r\n          <h3>Detail Kamar</h3>\r\n          <p><strong>ID:</strong> {{ selectedKamar.id }}</p>\r\n          <p><strong>Nomor Kamar:</strong> {{ selectedKamar.nomor_kamar }}</p>\r\n          <p><strong>Status Kamar:</strong> {{ selectedKamar.status_kamar }}</p>\r\n          <button @click=\"closeModal\">Tutup</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        kamarList: [],\r\n        selectedKamar: null,\r\n        showModal: false\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchKamarList();\r\n    },\r\n    methods: {\r\n      async fetchKamarList() {\r\n        try {\r\n          const response = await axios.get('http://127.0.0.1:5000/list-kamar');\r\n          this.kamarList = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching kamar list:', error);\r\n        }\r\n      },\r\n      getKamarStyle(status) {\r\n        if (status === 'Tersedia') {\r\n          return { backgroundColor: 'green' };\r\n        } else if (status === 'Terisi') {\r\n          return { backgroundColor: 'gray' };\r\n        } else if (status === 'Masa Sewa Akan Habis') {\r\n          return { backgroundColor: 'red' };\r\n        }\r\n        return { backgroundColor: 'lightgray' };  // default case\r\n      },\r\n      showDetail(kamar) {\r\n        this.selectedKamar = kamar;\r\n        this.showModal = true;\r\n      },\r\n      closeModal() {\r\n        this.showModal = false;\r\n        this.selectedKamar = null;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .kamar-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .kamar-item {\r\n    width: 120px;\r\n    height: 120px;\r\n    border-radius: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    transition: transform 0.3s;\r\n  }\r\n  \r\n  .kamar-item:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  \r\n  .nomor-kamar {\r\n    color: white;\r\n    font-size: 18px;\r\n  }\r\n  \r\n  .modal {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .modal-content {\r\n    background-color: white;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    width: 300px;\r\n    text-align: left;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px 20px;\r\n    background-color: #c20ab0;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #9b0a7f;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAuBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,aAAa,EAAE,IAAI;MACnBC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,kCAAkC,CAAC;QACpE,IAAI,CAACP,SAAQ,GAAIM,QAAQ,CAACP,IAAI;MAChC,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDE,aAAaA,CAACC,MAAM,EAAE;MACpB,IAAIA,MAAK,KAAM,UAAU,EAAE;QACzB,OAAO;UAAEC,eAAe,EAAE;QAAQ,CAAC;MACrC,OAAO,IAAID,MAAK,KAAM,QAAQ,EAAE;QAC9B,OAAO;UAAEC,eAAe,EAAE;QAAO,CAAC;MACpC,OAAO,IAAID,MAAK,KAAM,sBAAsB,EAAE;QAC5C,OAAO;UAAEC,eAAe,EAAE;QAAM,CAAC;MACnC;MACA,OAAO;QAAEA,eAAe,EAAE;MAAY,CAAC,EAAG;IAC5C,CAAC;IACDC,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAACb,aAAY,GAAIa,KAAK;MAC1B,IAAI,CAACZ,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDa,UAAUA,CAAA,EAAG;MACX,IAAI,CAACb,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACD,aAAY,GAAI,IAAI;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}