{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  data() {\n    return {\n      // Simulate the initial user data (you can replace this with an API call)\n      users: [{\n        id: 3,\n        nama: \"Aura\",\n        email: \"aura@example.com\",\n        phone: \"081234567890\",\n        role: \"Penyewa\"\n      }],\n      searchQuery: '' // for storing the search input\n    };\n  },\n  computed: {\n    // Computed property for filtered users based on search query\n    filteredUsers() {\n      return this.users.filter(user => {\n        return user.nama.toLowerCase().includes(this.searchQuery.toLowerCase()) || user.email.toLowerCase().includes(this.searchQuery.toLowerCase()) || user.phone.includes(this.searchQuery);\n      });\n    }\n  },\n  methods: {\n    confirmDelete(userId) {\n      if (confirm(\"Are you sure you want to delete this user?\")) {\n        // Remove the user from the users array based on the id\n        this.users = this.users.filter(user => user.id !== userId);\n        console.log(\"User deleted\", userId);\n        // You can call an API here to delete the user in the database\n      } else {\n        console.log(\"User not deleted\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","users","id","nama","email","phone","role","searchQuery","computed","filteredUsers","filter","user","toLowerCase","includes","methods","confirmDelete","userId","confirm","console","log"],"sources":["D:\\SEMESTER 5\\Proyek\\Web_Kost\\frontend\\src\\views\\ListPenyewa.vue"],"sourcesContent":["<template>\r\n    <div class=\"content\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header d-flex justify-content-between\">\r\n              <h4 class=\"card-title\">Daftar Penyewa</h4>\r\n              <!-- Search Input -->\r\n              <input \r\n                v-model=\"searchQuery\" \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                placeholder=\"Cari user...\" \r\n                style=\"width: 250px;\" \r\n              />\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                  <thead class=\"text-primary\">\r\n                    <tr>\r\n                      <th>No</th>\r\n                      <th>Nama</th>\r\n                      <th>Email</th>\r\n                      <th>Phone</th>\r\n                      <th>Role</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <!-- Loop through the users array and display each user with filter -->\r\n                    <tr v-for=\"(user, index) in filteredUsers\" :key=\"user.id\">\r\n                      <td>{{ index + 1 }}</td>\r\n                      <td>{{ user.nama }}</td>\r\n                      <td>{{ user.email }}</td>\r\n                      <td>{{ user.phone }}</td>\r\n                      <td>{{ user.role }}</td>\r\n                      <td class=\"text-right\">\r\n                        <router-link :to=\"'/add-user'\">\r\n                          <button class=\"btn btn-success btn-sm\">Tambah</button>\r\n                        </router-link>\r\n                        <router-link :to=\"'/update-user/' + user.id\">\r\n                          <button class=\"btn btn-warning btn-sm\">Update</button>\r\n                        </router-link>\r\n                        <button class=\"btn btn-danger btn-sm\" @click=\"confirmDelete(user.id)\">Hapus</button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        // Simulate the initial user data (you can replace this with an API call)\r\n        users: [\r\n          { id: 3, nama: \"Aura\", email: \"aura@example.com\", phone: \"081234567890\", role: \"Penyewa\" }\r\n        ],\r\n        searchQuery: ''  // for storing the search input\r\n      };\r\n    },\r\n    computed: {\r\n      // Computed property for filtered users based on search query\r\n      filteredUsers() {\r\n        return this.users.filter(user => {\r\n          return (\r\n            user.nama.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n            user.email.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n            user.phone.includes(this.searchQuery)\r\n          );\r\n        });\r\n      }\r\n    },\r\n    methods: {\r\n      confirmDelete(userId) {\r\n        if (confirm(\"Are you sure you want to delete this user?\")) {\r\n          // Remove the user from the users array based on the id\r\n          this.users = this.users.filter(user => user.id !== userId);\r\n          console.log(\"User deleted\", userId);\r\n          // You can call an API here to delete the user in the database\r\n        } else {\r\n          console.log(\"User not deleted\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Styling for the table and buttons */\r\n  .table th, .table td {\r\n    text-align: center;\r\n  }\r\n  \r\n  .table th {\r\n    background-color: #f8f9fa;\r\n  }\r\n  \r\n  .btn-sm {\r\n    margin: 0 5px;\r\n  }\r\n  \r\n  .btn-info {\r\n    background-color: #17a2b8;\r\n  }\r\n  \r\n  .btn-success {\r\n    background-color: #28a745;\r\n  }\r\n  \r\n  .btn-warning {\r\n    background-color: #ffc107;\r\n  }\r\n  \r\n  .btn-danger {\r\n    background-color: #dc3545;\r\n  }\r\n  </style>\r\n  "],"mappings":";;AA0DE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,KAAK,EAAE,CACL;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE,kBAAkB;QAAEC,KAAK,EAAE,cAAc;QAAEC,IAAI,EAAE;MAAU,EAC1F;MACDC,WAAW,EAAE,EAAC,CAAG;IACnB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACR,KAAK,CAACS,MAAM,CAACC,IAAG,IAAK;QAC/B,OACEA,IAAI,CAACR,IAAI,CAACS,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACN,WAAW,CAACK,WAAW,CAAC,CAAC,KAC/DD,IAAI,CAACP,KAAK,CAACQ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACN,WAAW,CAACK,WAAW,CAAC,CAAC,KAChED,IAAI,CAACN,KAAK,CAACQ,QAAQ,CAAC,IAAI,CAACN,WAAW;MAExC,CAAC,CAAC;IACJ;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,aAAaA,CAACC,MAAM,EAAE;MACpB,IAAIC,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzD;QACA,IAAI,CAAChB,KAAI,GAAI,IAAI,CAACA,KAAK,CAACS,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACT,EAAC,KAAMc,MAAM,CAAC;QAC1DE,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,MAAM,CAAC;QACnC;MACF,OAAO;QACLE,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MACjC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}